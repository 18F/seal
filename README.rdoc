== README

##What is it?

This is a Slack bot that will let the GDS Core team know when Pull Requests need to be reviewed, and send them a reminder when there are Pull Requests that have been sitting there for too long. It is my first 20% project at GDS.


## Diary of how this app was built

10th April:
- Finalised what the app does:
    - Hourly, checks if any pull requests are over 6 hours old (angry seal)
    - at 9.45am prepares an overview of all pull requests that need reviewing (informative seal)
    - when a team member posts a new pull request, publishes it on slack (notification seal)

- Researched what technologies and gems I could use and what the app structure would be like
- Started the Rails app

17th April:
- researched github_api

24th April:
- got github_api working, first test with dummy data passing

1st of May
- got github_listener to take into account organisations

8th of May:
- tried stubbing Github API

15th of May:
- Github listener can now return the list of repos of an organisation
- further attempts to stub GithubAPI using these methods: https://robots.thoughtbot.com/how-to-stub-external-services-in-tests.

21st of May:
- Building Sinatra app for stubbing
- Attempts to filter the 3,400 repo list by date the repo was modified - tests (and app) are still very slow

28th of May:
- Due to new team structure that assigns a list of repos to each team, decided the manually enter the list of repos that belong to a team instead of scanning through all of them. That should sort the speed problem, the stubbing problem, a lot of things.
- moved to a non-Rails app to make it lighter
- got Github to list repos; works for my personal pull requests, but doesn't work with the GOV.UK stuff yet, need to figure out why

5th of June:
- Github fetcher class now works with organisations, hence GOV.UK stuff

11th of June:
- Stubbed Github API

12th of June:
- Github Fetcher now also returns the link to the pull request
- Started Slackbot poster class, it can post to Slack
- Started Message builder class, not finished

To be done:
- add options to the Slackbot poster class to allow to post from angry seal
- change message if there are no open pull requests
- push to Heroku with Heroku scheduler

## CRC

Github fetcher:
- queries Github's API

Message Builder:
- produces message from Github API's content

Slack Poster:
- posts message to Slack

Trello board: https://trello.com/b/sgakJmlY/moody-seal
